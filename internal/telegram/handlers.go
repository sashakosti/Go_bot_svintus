package telegram

import (
	"fmt"
	"log"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"github.com/sashakosti/Go_Bot_Svintus/internal/service"
	"github.com/sashakosti/Go_Bot_Svintus/internal/storage"
)

type Handler struct {
	Bot     *tgbotapi.BotAPI
	Service *service.GameService
}

// HandleJoin - /join
func (h *Handler) HandleJoin(msg *tgbotapi.Message) {
	tgID := msg.From.ID
	username := msg.From.UserName
	displayName := msg.From.FirstName

	err := h.Service.RegisterPlayer(tgID, username, displayName)
	if err != nil {
		h.Bot.Send(tgbotapi.NewMessage(msg.Chat.ID, "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è üòÖ"))
		return
	}

	h.Bot.Send(tgbotapi.NewMessage(msg.Chat.ID, fmt.Sprintf("%s –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ!", displayName)))
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /record
func (h *Handler) HandleRecord(msg *tgbotapi.Message, playersOrder []storage.Player, pointsForPlace func(place int) int, gameID int) {
	err := h.Service.RecordGame(gameID, playersOrder, pointsForPlace)
	if err != nil {
		h.Bot.Send(tgbotapi.NewMessage(msg.Chat.ID, "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã üòÖ"))
		return
	}

	h.Bot.Send(tgbotapi.NewMessage(msg.Chat.ID, "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã! ‚úÖ"))
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /leaderboard
func (h *Handler) HandleLeaderboard(chatID int64) {
	leaderboard, err := h.Service.GetLeaderboard()
	if err != nil {
		h.Bot.Send(tgbotapi.NewMessage(chatID, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥ üòÖ"))
		return
	}

	text := "üèÜ –†–µ–π—Ç–∏–Ω–≥ –∏–≥—Ä–æ–∫–æ–≤:\n"
	for i, p := range leaderboard {
		text += fmt.Sprintf("%d. %s ‚Äî %d –æ—á–∫–æ–≤\n", i+1, p.DisplayName, p.Score)
	}

	h.Bot.Send(tgbotapi.NewMessage(chatID, text))
}

// HandleMyScore - —É–∑–Ω–∞—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –æ—á–∫–∏
func (h *Handler) HandleMyScore(msg *tgbotapi.Message) {
	score, err := h.Service.GetPlayerScore(msg.From.ID)
	if err != nil {
		h.Bot.Send(tgbotapi.NewMessage(msg.Chat.ID, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—á–∫–∏ üòÖ"))
		log.Printf("[MyScore] failed for %s: %v", msg.From.UserName, err)
		return
	}
	h.Bot.Send(tgbotapi.NewMessage(msg.Chat.ID, fmt.Sprintf("%s, —É —Ç–µ–±—è %d –æ—á–∫–æ–≤", msg.From.FirstName, score)))
	log.Printf("[MyScore] %s has %d points", msg.From.UserName, score)
}
